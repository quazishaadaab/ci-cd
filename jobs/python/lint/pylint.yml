include:
  - local: '/jobs/python/lint/.pylint.yml'

variables:
  INVALID_COMMIT_SHA: "0000000000000000000000000000000000000000"

# implement a stage for feature branches in which you are comparing the current commit to the previous
.pylint-base:
  image: registry.gitlab.int.bell.ca/tvsre-tools/lib/base-images/rhel:ubi8-python-3.9-linter-dev
  stage: verify
  tags:
    - openshift
    - belmont
    - dev
  rules:
    - &python_changes_rule
      changes:
        - "**/*.py"
  before_script:
    - mkdir -p public/badges public/lint
    - mkdir /.cache
    - echo undefined > public/badges/$CI_JOB_NAME.score

lint-with-pylint:
  extends: .pylint-base
  # run this stage when its not a merge request event
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_SHA == $INVALID_COMMIT_SHA || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG
      when: never
    - *python_changes_rule
  before_script:
    - FILES=$(git diff-tree --no-commit-id --name-only --diff-filter=dr -r $CI_COMMIT_SHA | grep '\.py'$ | grep -v 'test_*') || exit 0
  script:
    - echo "changed files -> $FILES"
    - echo $PYLINT_ARGS
    - pylint $PYLINT_ARGS --fail-under=$PYLINT_SCORE --output-format=text $FILES | tee /tmp/pylint.txt

# implement a stage for merging into main in which you compare the current branch to the target branch
lint-with-pylint-mr:
  extends: .pylint-base
  # run when its a merge request event
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft.*/ || $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "**/*.py"
  before_script:
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - git fetch origin $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - FILES=$(git diff -r --name-only --diff-filter=dr origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME | grep '\.py'$ | grep -v 'test_*') || exit 0
  script:
    - echo "changed files -> $FILES"
    - echo $PYLINT_ARGS
    - pylint $PYLINT_ARGS --fail-under=$PYLINT_SCORE --output-format=text $FILES | tee /tmp/pylint.txt

lint-tests-with-pylint:
  extends: .pylint-base
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_SHA == $INVALID_COMMIT_SHA || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG
      when: never
    - changes:
      - "**/*/tests/*.py"
  allow_failure: true
  before_script:
    - FILES=$(git diff-tree --no-commit-id --name-only --diff-filter=dr -r $CI_COMMIT_SHA | grep '\.py'$ | grep 'test_*')
  script:
    - echo "changed files -> $FILES"
    - echo $PYLINT_TEST_ARGS
    - pylint $PYLINT_TEST_ARGS --fail-under=$PYLINT_SCORE --output-format=text $FILES | tee /tmp/pylint.txt